data_1 <- read.csv("/Users/satourintarou/Documents/AIST/Course/StatiscalAnalysis/week2/data/csv/5_1_income.csv", header = TRUE, sep = ",")#
data_1
reg1 <- lm(income ~ yeduc, data = data_1)#
summary(reg1)
head(data_1)
data_2 <- read.csv("/Users/satourintarou/Documents/AIST/Course/StatiscalAnalysis/text/data/csv/5_1_income.csv", header = TRUE, sep = ",")#
data_2#
head(data_2)
data_2 <- read.csv("/Users/satourintarou/Documents/AIST/Course/StatiscalAnalysis/text/data/csv/5_2_sleep.csv", header = TRUE, sep = ",")#
data_2#
head(data_2)
reg_sleep <- lm(sleep ~ commute, data = data_2)#
summary(reg2)
reg_sleep <- lm(sleep ~ commute, data = data_2)#
summary(reg_sleep)
reg2 <- lm(lincome ~ lyeduc, data = data_1)#
summary(reg2)
getwd()#
# $ pwd#
setwd("/Users/satourintarou/Documents/AIST/Course/StatiscalAnalysis/week6")#
data_3 <- read.csv("attend.csv", header = TRUE, sep = ",")#
data_3#
summary(data_3)#
head(data_3)
reg6 <- lm(stndfnl ~ atndrte + frosh + soph + priGPA + ACT + I(priGPA^2) + I(ACT^2), data = data_3)#
summary(reg6)
library(lmtest)#
library(sandwich)#
coeftest(reg6, vcov = vcovHC(reg6, "HC1"))
linearHypothesis(reg6, c( "I(priGPA^2)" , "I(ACT^2)"), c(0,0),#
  white.adjust=c("hc1"), test=c("Chisq"))
library(car)
linearHypothesis(reg6, c( "I(priGPA^2)" , "I(ACT^2)"), c(0,0),#
  white.adjust=c("hc1"), test=c("Chisq"))
linearHypothesis(reg6, c( "atndrte" , "frosh" , "soph" ,#
"priGPA" , "ACT" , "I(priGPA^2)" , "I(ACT^2)"), c(0,0,0,0,0,0),#
white.adjust=c("hc1"), test=c("Chisq"))
getwd()#
setwd("/Users/satourintarou/Documents/AIST/Course/ExperimentDesignInCS/homework/hw2/data")#
#
orb <- read.csv("orb.csv", header = F)#
orb#
akaze <- read.csv("akaze.csv", header = F)#
akaze#
brisk <- read.csv("brisk.csv", header = F)#
brisk#
#
mean(orb$V1)#
mean(akaze$V1)#
mean(brisk$V1)
n_sample <- 100#
dataf2 = data.frame(runtime = c(orb$V1, akaze$V1, brisk$V1), #
   algorithm = rep(c("ORB", "AKAZE", "BRISK"), each = n_sample))
head(dataf2)#
tail(dataf2)#
summary(dataf2)
n_sample <- 100#
dataf = data.frame(runtime = c(orb$V1, akaze$V1, brisk$V1), #
   algorithm = rep(c("ORB", "AKAZE", "BRISK"), each = n_sample))#
head(dataf)#
tail(dataf)#
summary(dataf)
library("ggplot2")# install.packages("ggplot2")
p <- ggplot(data = dataf, aes(x = algorithm , y = runtime, fill=algorithm)) + geom_boxplot()#
pp <- p + ggtitle("Run time of matching 50 feature points in 3 different algorithm")#
ppp <- pp + geom_point()#
pppp <- ppp + ylab("run time[ms]")#
pppp
typeof(dataf$runtime)#
names(dataf)
model <- aov(runtime ~ algorithm, data = dataf)#
summary.aov(model)
shapiro.test(model$residuals)#
library(car)#
qqPlot(model$residuals, pch = 16, lwd = 3, cex = 2, las = 1)
png("qqplot.png")#
qqPlot(model$residuals, pch = 16, lwd = 3, cex = 2, las = 1)#
dev.off()
fligner.test(runtime ~ algorithm, data = dataf)#
png("fligner.png")#
plot(x = model$fitted.values, y = model$residuals, xlab = "fitted values", ylab = "residuals")#
dev.off()
tukey <- TukeyHSD(aov(dataf$runtime ~ dataf$algorithm), conf.level=0.95)#
tukey#
png("tukey.png")#
plot(tukey)#
dev.off()
